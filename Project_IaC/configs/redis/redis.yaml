apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: redis
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      containers:
        - name: redis
          image: redis:7.2
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 6379
          command:
            - "redis-server"
          args:
            - "--protected-mode"
            - "no"
            - "--lazyfree-lazy-eviction"
            - "no"
            - "--lazyfree-lazy-expire"
            - "no"
            - "--lazyfree-lazy-server-del"
            - "no"
            - "--save"
            - "300"
            - "1"
            - "--appendonly"
            - "no"
          volumeMounts:
          - name: redis
            mountPath: /data
          resources:
            requests:
              cpu: 150m
              memory: 200Mi
            limits:
              cpu: 250m
              memory: 400Mi
        - name: redis-exporter
          image: faioa/crv:olivier006_redis_exporter
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 9121
          env:
          - name: REDIS_ADDR
            value: "redis://localhost:6379"
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9121
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9121
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
  volumeClaimTemplates:
  - metadata:
      name: redis
    spec:
      accessModes: [ "ReadWriteOncePod" ]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  - name: metrics
    port: 9121
    targetPort: 9121
