#https://grafana.com/docs/grafana/latest/setup-grafana/installation/kubernetes/

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana
            - mountPath: /etc/grafana/grafana.ini
              name: grafana-config
              subPath: grafana.ini
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: grafana-datasources
              subPath: datasources.yaml
            - mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              name: grafana-dashboards-config
              subPath: dashboards.yaml
            - mountPath: /var/lib/grafana/dashboards/default-dashboard.json
              name: grafana-default-dashboard
              subPath: default-dashboard.json
          resources:
            requests:
              cpu: 80m
              memory: 200Mi
            limits:
              cpu: 150m
              memory: 350Mi
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
            items:
            - key: grafana.ini
              path: grafana.ini
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
            items:
            - key: datasources.yaml
              path: datasources.yaml
        - name: grafana-dashboards-config
          configMap:
            name: grafana-dashboards-config
            items:
            - key: dashboards.yaml
              path: dashboards.yaml
        - name: grafana-default-dashboard
          configMap:
            name: grafana-default-dashboard
            items:
            - key: default-dashboard.json
              path: default-dashboard.json
  volumeClaimTemplates:
  - metadata:
      name: grafana
    spec:
      accessModes: [ "ReadWriteOncePod" ]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: http-grafana
